//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Scripts/Character/InputSystem/ActionsMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ActionsMap: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ActionsMap()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ActionsMap"",
    ""maps"": [
        {
            ""name"": ""CharacterActions"",
            ""id"": ""b7208605-cca8-46e8-ae31-947b4d30e147"",
            ""actions"": [
                {
                    ""name"": ""Moving"",
                    ""type"": ""Value"",
                    ""id"": ""09f0223b-f770-45ea-95f0-d98dd76989c5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jumping"",
                    ""type"": ""Button"",
                    ""id"": ""3d62d172-d72b-47cc-9101-6485e8c56e99"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Running"",
                    ""type"": ""Button"",
                    ""id"": ""7c9c8038-3b34-49e2-b1ce-3eed33b7eee5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Walking"",
                    ""type"": ""Button"",
                    ""id"": ""2673068a-3cf1-4eee-9094-523b740a7670"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseDelta"",
                    ""type"": ""Value"",
                    ""id"": ""eaa68b9c-6135-4047-95ad-634c814a9077"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""Value"",
                    ""id"": ""126f6ede-a4c3-4cb7-99d9-09822223b084"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseLeftButton"",
                    ""type"": ""Button"",
                    ""id"": ""fc1231c1-b899-4e42-918b-a4c0674bf22f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseRightButton"",
                    ""type"": ""Button"",
                    ""id"": ""e73d94b2-3ce0-4f8d-be76-6a3777097c34"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseMiddleButton"",
                    ""type"": ""Button"",
                    ""id"": ""271861ba-c24c-42d1-86d7-37784903cc76"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d1d64da5-f633-45f8-a08c-3a6c6243eb55"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moving"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""804459c7-b750-4215-8235-e009d888036c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moving"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""25458dd2-b161-4042-9bef-3570a28356c6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moving"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5c08690d-72e7-4620-89e7-883c5d84ddb6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moving"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9b60adf7-e94e-4e43-a17f-537ecde8673b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Moving"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""dca6d89b-46ca-4eba-b970-201c9649628d"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29df488a-d8c7-4593-bb91-ce0736567ec2"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b94f17e7-2a2d-41a9-8fa6-91bab3ce66fc"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseLeftButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2c342d7-4627-4b5c-8776-37043c3bd509"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseRightButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8fed8fbd-8dbe-4219-bc28-44f2d84a3b6f"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseMiddleButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1480f88c-d81a-41e8-9047-30c770b7afcc"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jumping"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22e50628-74ab-41b9-9352-17df2bd721b4"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Running"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28f9d6ea-bd0f-42f3-a0da-8a0f24ac56ae"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CharacterActions
        m_CharacterActions = asset.FindActionMap("CharacterActions", throwIfNotFound: true);
        m_CharacterActions_Moving = m_CharacterActions.FindAction("Moving", throwIfNotFound: true);
        m_CharacterActions_Jumping = m_CharacterActions.FindAction("Jumping", throwIfNotFound: true);
        m_CharacterActions_Running = m_CharacterActions.FindAction("Running", throwIfNotFound: true);
        m_CharacterActions_Walking = m_CharacterActions.FindAction("Walking", throwIfNotFound: true);
        m_CharacterActions_MouseDelta = m_CharacterActions.FindAction("MouseDelta", throwIfNotFound: true);
        m_CharacterActions_MouseScroll = m_CharacterActions.FindAction("MouseScroll", throwIfNotFound: true);
        m_CharacterActions_MouseLeftButton = m_CharacterActions.FindAction("MouseLeftButton", throwIfNotFound: true);
        m_CharacterActions_MouseRightButton = m_CharacterActions.FindAction("MouseRightButton", throwIfNotFound: true);
        m_CharacterActions_MouseMiddleButton = m_CharacterActions.FindAction("MouseMiddleButton", throwIfNotFound: true);
    }

    ~@ActionsMap()
    {
        UnityEngine.Debug.Assert(!m_CharacterActions.enabled, "This will cause a leak and performance issues, ActionsMap.CharacterActions.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CharacterActions
    private readonly InputActionMap m_CharacterActions;
    private List<ICharacterActionsActions> m_CharacterActionsActionsCallbackInterfaces = new List<ICharacterActionsActions>();
    private readonly InputAction m_CharacterActions_Moving;
    private readonly InputAction m_CharacterActions_Jumping;
    private readonly InputAction m_CharacterActions_Running;
    private readonly InputAction m_CharacterActions_Walking;
    private readonly InputAction m_CharacterActions_MouseDelta;
    private readonly InputAction m_CharacterActions_MouseScroll;
    private readonly InputAction m_CharacterActions_MouseLeftButton;
    private readonly InputAction m_CharacterActions_MouseRightButton;
    private readonly InputAction m_CharacterActions_MouseMiddleButton;
    public struct CharacterActionsActions
    {
        private @ActionsMap m_Wrapper;
        public CharacterActionsActions(@ActionsMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Moving => m_Wrapper.m_CharacterActions_Moving;
        public InputAction @Jumping => m_Wrapper.m_CharacterActions_Jumping;
        public InputAction @Running => m_Wrapper.m_CharacterActions_Running;
        public InputAction @Walking => m_Wrapper.m_CharacterActions_Walking;
        public InputAction @MouseDelta => m_Wrapper.m_CharacterActions_MouseDelta;
        public InputAction @MouseScroll => m_Wrapper.m_CharacterActions_MouseScroll;
        public InputAction @MouseLeftButton => m_Wrapper.m_CharacterActions_MouseLeftButton;
        public InputAction @MouseRightButton => m_Wrapper.m_CharacterActions_MouseRightButton;
        public InputAction @MouseMiddleButton => m_Wrapper.m_CharacterActions_MouseMiddleButton;
        public InputActionMap Get() { return m_Wrapper.m_CharacterActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterActionsActions set) { return set.Get(); }
        public void AddCallbacks(ICharacterActionsActions instance)
        {
            if (instance == null || m_Wrapper.m_CharacterActionsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CharacterActionsActionsCallbackInterfaces.Add(instance);
            @Moving.started += instance.OnMoving;
            @Moving.performed += instance.OnMoving;
            @Moving.canceled += instance.OnMoving;
            @Jumping.started += instance.OnJumping;
            @Jumping.performed += instance.OnJumping;
            @Jumping.canceled += instance.OnJumping;
            @Running.started += instance.OnRunning;
            @Running.performed += instance.OnRunning;
            @Running.canceled += instance.OnRunning;
            @Walking.started += instance.OnWalking;
            @Walking.performed += instance.OnWalking;
            @Walking.canceled += instance.OnWalking;
            @MouseDelta.started += instance.OnMouseDelta;
            @MouseDelta.performed += instance.OnMouseDelta;
            @MouseDelta.canceled += instance.OnMouseDelta;
            @MouseScroll.started += instance.OnMouseScroll;
            @MouseScroll.performed += instance.OnMouseScroll;
            @MouseScroll.canceled += instance.OnMouseScroll;
            @MouseLeftButton.started += instance.OnMouseLeftButton;
            @MouseLeftButton.performed += instance.OnMouseLeftButton;
            @MouseLeftButton.canceled += instance.OnMouseLeftButton;
            @MouseRightButton.started += instance.OnMouseRightButton;
            @MouseRightButton.performed += instance.OnMouseRightButton;
            @MouseRightButton.canceled += instance.OnMouseRightButton;
            @MouseMiddleButton.started += instance.OnMouseMiddleButton;
            @MouseMiddleButton.performed += instance.OnMouseMiddleButton;
            @MouseMiddleButton.canceled += instance.OnMouseMiddleButton;
        }

        private void UnregisterCallbacks(ICharacterActionsActions instance)
        {
            @Moving.started -= instance.OnMoving;
            @Moving.performed -= instance.OnMoving;
            @Moving.canceled -= instance.OnMoving;
            @Jumping.started -= instance.OnJumping;
            @Jumping.performed -= instance.OnJumping;
            @Jumping.canceled -= instance.OnJumping;
            @Running.started -= instance.OnRunning;
            @Running.performed -= instance.OnRunning;
            @Running.canceled -= instance.OnRunning;
            @Walking.started -= instance.OnWalking;
            @Walking.performed -= instance.OnWalking;
            @Walking.canceled -= instance.OnWalking;
            @MouseDelta.started -= instance.OnMouseDelta;
            @MouseDelta.performed -= instance.OnMouseDelta;
            @MouseDelta.canceled -= instance.OnMouseDelta;
            @MouseScroll.started -= instance.OnMouseScroll;
            @MouseScroll.performed -= instance.OnMouseScroll;
            @MouseScroll.canceled -= instance.OnMouseScroll;
            @MouseLeftButton.started -= instance.OnMouseLeftButton;
            @MouseLeftButton.performed -= instance.OnMouseLeftButton;
            @MouseLeftButton.canceled -= instance.OnMouseLeftButton;
            @MouseRightButton.started -= instance.OnMouseRightButton;
            @MouseRightButton.performed -= instance.OnMouseRightButton;
            @MouseRightButton.canceled -= instance.OnMouseRightButton;
            @MouseMiddleButton.started -= instance.OnMouseMiddleButton;
            @MouseMiddleButton.performed -= instance.OnMouseMiddleButton;
            @MouseMiddleButton.canceled -= instance.OnMouseMiddleButton;
        }

        public void RemoveCallbacks(ICharacterActionsActions instance)
        {
            if (m_Wrapper.m_CharacterActionsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICharacterActionsActions instance)
        {
            foreach (var item in m_Wrapper.m_CharacterActionsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CharacterActionsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CharacterActionsActions @CharacterActions => new CharacterActionsActions(this);
    public interface ICharacterActionsActions
    {
        void OnMoving(InputAction.CallbackContext context);
        void OnJumping(InputAction.CallbackContext context);
        void OnRunning(InputAction.CallbackContext context);
        void OnWalking(InputAction.CallbackContext context);
        void OnMouseDelta(InputAction.CallbackContext context);
        void OnMouseScroll(InputAction.CallbackContext context);
        void OnMouseLeftButton(InputAction.CallbackContext context);
        void OnMouseRightButton(InputAction.CallbackContext context);
        void OnMouseMiddleButton(InputAction.CallbackContext context);
    }
}
